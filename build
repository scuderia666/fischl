#!/bin/sh

set -e

err() { echo $@; exit 1; }

if [[ ! -f out/xvo ]] || [[ -n $@ ]]; then
	if ! command -v v &> /dev/null; then
		err "please install v"
	fi

	mkdir -p out
	v src -o out/xvo
fi

if [[ ! -f out/xvo ]]; then
	err "couldnt build xvo"
fi

build_tools() {
	export PATH=$PWD/out/tools/bin:$PATH

	build() {
		./out/xvo build $@ \
			-root %pwd/out/rootfs \
			-tools %pwd/out/tools \
			-toolchain %pwd/out/toolchain \
			-pkg %pwd/tools/pkg \
			-stuff %pwd/tools/stuff \
			-dl %pwd/out/tools_dl \
			-bl %pwd/out/tools_build \
			-scripts %pwd/scripts \
			-target %arch-linux-musl \
			-nopackage yes \
			-debug yes
	}

	build linux-headers
	build binutils
	build gcc-static
	build musl
	build gcc
	build file
}

build_toolchain() {
	export PATH=$PWD/out/tools/bin:$PATH

	build() {
		./out/xvo build $@ \
			-root %pwd/out/rootfs \
			-tools %pwd/out/tools \
			-toolchain %pwd/out/toolchain \
			-pkg %pwd/toolchain/pkg \
			-stuff %pwd/toolchain/stuff \
			-dl %pwd/out/tc_dl \
			-bl %pwd/out/tc_build \
			-scripts %pwd/scripts \
			-target %arch-linux-musl \
			-config %pwd/toolchain/config \
			-nopackage yes \
			-debug yes
	}

	build musl
	#build adjust-tools
	build binutils
	#build curl
}

action() {
	./out/xvo $1 $2 \
		-root %pwd/out/rootfs \
		-tools %pwd/out/tools \
		-pkg %pwd/pkg \
		-stuff %pwd/stuff \
		-dl %pwd/out/dl \
		-bl %pwd/out/build \
		-scripts %pwd/scripts \
		-target %arch-linux-musl \
		-stage 0 \
		-debug yes
}

emerge() {
	action emerge $1
}

remove() {
	action remove $1
}

build_system() {
	emerge kernel-headers
	emerge gcc3
	emerge musl
	emerge patch
	emerge busybox
	emerge binutils
	emerge make
}

main() {
	case $1 in
		system) build_system ;;
		remove) shift; remove $1 ;;
		tools) build_tools ;;
		toolchain) build_toolchain ;;
		*) emerge $@ ;;
	esac

	shift $((OPTIND -1))
}

main $@
